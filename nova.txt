Installation and Configure Nova
Step 1:  Create the nova user
#	openstack user create --domain default --password service_pass nova
Step 2:  Add the admin role to the nova user
#	openstack role add --project service --user nova admin
Step 3:  Create the nova service entity
#	openstack service create --name nova --description "OpenStack Compute" compute
Step 4:  Create the Compute service API endpoints
#	openstack endpoint create --region RegionOne compute public http://192.168.0.180:8774/v2.1
Step 5:  Create the Compute service API endpoints
#	openstack endpoint create --region RegionOne compute internal http://10.10.100.181:8774/v2.1
Step 6:  Create the Compute service API endpoints
#	openstack endpoint create --region RegionOne compute admin http://10.10.100.181:8774/v2.1
Step 7:  Create a Placement service user
#	openstack user create --domain default --password service_pass placement
Step 8:  Add the Placement user to the service project with the admin role
#	openstack role add --project service --user placement admin
Step 9:  Create the Placement API entity
#	openstack service create --name placement --description "Placement API" placement
Step 10:  Create the Placement API endpoints
#	openstack endpoint create --region RegionOne placement public http://192.168.0.180:8778
Step 11:  Create the Placement API endpoints
#	openstack endpoint create --region RegionOne placement internal http://10.10.100.181:8778
Step 12:  Create the Placement API endpoints
#	openstack endpoint create --region RegionOne placement admin http://10.10.100.181:8778

Step 13: Install Nova Components
#	yum install openstack-nova-api openstack-nova-conductor  openstack-nova-console openstack-nova-novncproxy openstack-nova-scheduler openstack-nova-placement-api openstack-nova-compute -y
Step 14: Login to database
#	mysql -u root -proot1234

#	CREATE DATABASE nova;
	GRANT ALL ON nova.* TO 'novaUser'@'%' IDENTIFIED BY 'novaPass';
	CREATE DATABASE nova_api;
	GRANT ALL ON nova_api.* TO 'novaUser'@'%' IDENTIFIED BY 'novaPass';
	CREATE DATABASE nova_cell0;
	GRANT ALL ON nova_cell0.* TO 'novaUser'@'%' IDENTIFIED BY 'novaPass';
	CREATE DATABASE placement;
	GRANT ALL ON placement.* TO 'novaUser'@'%' IDENTIFIED BY 'novaPass';
	quit;
Step 15: Modify the /etc/nova/nova.conf
#	vim /etc/nova/nova.conf

[Default]
my_ip = 10.10.100.181
use_neutron = True
enabled_apis = osapi_compute,metadata
firewall_driver = nova.virt.firewall.NoopFirewallDriver
transport_url = rabbit://openstack:rabbit@10.10.100.181

[api]
auth_strategy=keystone


[api_database]
connection=mysql+pymysql://novaUser:novaPass@10.10.100.181/nova_api

 [database]
connection=mysql+pymysql://novaUser:novaPass@10.10.100.181/nova

[placement_database]
connection=mysql+pymysql://novaUser:novaPass@10.10.100.181/placement

[cinder]
os_region_name = RegionOne

[glance]
api_servers = http://10.10.100.181:9292

[keystone_authtoken]
auth_uri = http://10.10.100.181:5000
auth_url = http://10.10.100.181:5000/v3
memcached_servers = 10.10.100.181:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = service_pass

[neutron]
service_metadata_proxy = True
metadata_proxy_shared_secret = mystack
url = http://10.10.100.181:9696
auth_url = http://10.10.100.181:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = service_pass

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

[placement]
os_region_name = RegionOne
project_domain_name = Default
project_name = service
auth_type = password
user_domain_name = Default
auth_url = http://10.10.100.181:5000/v3
username = placement
password = service_pass

[vnc]
enabled = True
server_listen = 0.0.0.0
server_proxyclient_address = 10.10.100.181
novncproxy_base_url = http://192.168.0.180:6080/vnc_auto.html

[libvirt]
virt_type = qemu
cpu_mode = none


Step 16: Modify the /etc/httpd/conf.d/00-nova-placement-api.conf
#	vim /etc/httpd/conf.d/00-nova-placement-api.conf

<Directory /usr/bin>
  <IfVersion >= 2.4>
    Require all granted
   </IfVersion>
   <IfVersion < 2.4>
     Order allow,deny
      Allow from all
   </IfVersion>
</Directory>


# 	systemctl restart httpd.service

Step 17: Synchronize your database
a. Populate the nova-api database

# 	su -s /bin/sh -c "nova-manage api_db sync" nova

b. Register the cell0 database
#	su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova

c. Create the cell1 cell
#	su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova

d. Populate the nova database
#	su -s /bin/sh -c "nova-manage db sync" nova

e. Verify nova cell0 and cell1 are registered correctly
#	nova-manage cell_v2 list_cells



Step 18: Enable all the Nova services and start all the Nova Services
#	systemctl enable openstack-nova-api.service openstack-nova-conductor.service openstack-nova-consoleauth.service openstack-nova-novncproxy.service openstack-nova-scheduler.service libvirtd.service openstack-nova-compute.service

#	systemctl start openstack-nova-api.service openstack-nova-conductor.service openstack-nova-consoleauth.service openstack-nova-novncproxy.service openstack-nova-scheduler.service libvirtd.service openstack-nova-compute.service

Step 19: Synchronize 
Verify nova cell0 and cell1 are registered correctly
#	su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova

Step 20: Check for the smiling faces on nova-* services to confirm your installation
#	openstack compute service list	
